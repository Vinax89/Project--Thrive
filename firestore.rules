/**
 * @fileoverview Firestore Security Rules for ChatPay application.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model for all data stored in Firestore.
 * Only the authenticated user who owns the data can read, create, update, or delete it.
 *
 * Data Structure:
 * All user-specific data is nested under the /users/{userId} path. This includes user profiles,
 * debts, obligations, budgets, budget items, and investments.  This structure guarantees Authorization Independence,
 * because the path to the data inherently defines ownership by a user.
 *
 * Key Security Decisions:
 * - User listing is explicitly denied.
 * - All write operations require a verified, signed-in user.
 * - No schema validation is performed beyond ensuring data consistency between
 *   document IDs and the user ID in the path.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the request is authenticated.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the request is made by the owner of the resource.
     */
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    /**
     * @description Checks if the request is made by the existing owner of the resource and that the resource exists.
     */
    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }

    /****************** User Profile Rules ******************/

    /**
     * @description Manages user profile access.
     * @path /users/{userId}
     * @allow (create) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can create their own profile.
     * @allow (get) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can get their own profile.
     * @allow (update) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can update their own profile.
     * @allow (delete) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can delete their own profile.
     * @deny (create) User 'OtherUserId' cannot create a profile with ID '5HaBmUz0e0eHTgSEGL19OhZvjp83'.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId} {
      // Read rules
      allow get: if isOwner(userId);
      allow list: if false; // User listing is not allowed.

      // Write rules
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.id == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }

    /****************** Debt Rules ******************/

    /**
     * @description Manages debt access for a user.
     * @path /users/{userId}/debts/{debtId}
     * @allow (create) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can create a debt under their profile.
     * @allow (get) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can get a debt under their profile.
     * @allow (update) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can update a debt under their profile.
     * @allow (delete) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can delete a debt under their profile.
     * @deny (create) User 'OtherUserId' cannot create a debt under user '5HaBmUz0e0eHTgSEGL19OhZvjp83's profile.
     * @principle Enforces document ownership for writes and restricts access to a user's own data.
     */
    match /users/{userId}/debts/{debtId} {
      // Read rules
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);

      // Write rules
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.userProfileId == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.userProfileId == resource.data.userProfileId;
      allow delete: if isExistingOwner(userId);
    }

    /****************** Obligation Rules ******************/

    /**
     * @description Manages obligation access for a user.
     * @path /users/{userId}/obligations/{obligationId}
     * @allow (create) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can create an obligation under their profile.
     * @allow (get) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can get an obligation under their profile.
     * @allow (update) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can update an obligation under their profile.
     * @allow (delete) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can delete an obligation under their profile.
     * @deny (create) User 'OtherUserId' cannot create an obligation under user '5HaBmUz0e0eHTgSEGL19OhZvjp83's profile.
     * @principle Enforces document ownership for writes and restricts access to a user's own data.
     */
    match /users/{userId}/obligations/{obligationId} {
      // Read rules
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);

      // Write rules
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.userProfileId == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.userProfileId == resource.data.userProfileId;
      allow delete: if isExistingOwner(userId);
    }

    /****************** Budget Rules ******************/

    /**
     * @description Manages budget access for a user.
     * @path /users/{userId}/budgets/{budgetId}
     * @allow (create) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can create a budget under their profile.
     * @allow (get) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can get a budget under their profile.
     * @allow (update) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can update a budget under their profile.
     * @allow (delete) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can delete a budget under their profile.
     * @deny (create) User 'OtherUserId' cannot create a budget under user '5HaBmUz0e0eHTgSEGL19OhZvjp83's profile.
     * @principle Enforces document ownership for writes and restricts access to a user's own data.
     */
    match /users/{userId}/budgets/{budgetId} {
      // Read rules
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);

      // Write rules
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.userProfileId == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.userProfileId == resource.data.userProfileId;
      allow delete: if isExistingOwner(userId);
    }

    /****************** BudgetItem Rules ******************/

    /**
     * @description Manages budget item access for a user.
     * @path /users/{userId}/budgets/{budgetId}/budgetItems/{budgetItemId}
     * @allow (create) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can create a budget item under their budget.
     * @allow (get) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can get a budget item under their budget.
     * @allow (update) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can update a budget item under their budget.
     * @allow (delete) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can delete a budget item under their budget.
     * @deny (create) User 'OtherUserId' cannot create a budget item under user '5HaBmUz0e0eHTgSEGL19OhZvjp83's budget.
     * @principle Enforces document ownership for writes and restricts access to a user's own data.
     */
    match /users/{userId}/budgets/{budgetId}/budgetItems/{budgetItemId} {
      // Read rules
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);

      // Write rules
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /****************** Investment Rules ******************/

    /**
     * @description Manages investment access for a user.
     * @path /users/{userId}/investments/{investmentId}
     * @allow (create) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can create an investment under their profile.
     * @allow (get) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can get an investment under their profile.
     * @allow (update) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can update an investment under their profile.
     * @allow (delete) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can delete an investment under their profile.
     * @deny (create) User 'OtherUserId' cannot create an investment under user '5HaBmUz0e0eHTgSEGL19OhZvjp83's profile.
     * @principle Enforces document ownership for writes and restricts access to a user's own data.
     */
    match /users/{userId}/investments/{investmentId} {
      // Read rules
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);

      // Write rules
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.userProfileId == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.userProfileId == resource.data.userProfileId;
      allow delete: if isExistingOwner(userId);
    }

     /****************** Transactions Rules (based on error report) ******************/

    /**
     * @description Manages transaction access for a user.  The original error report indicated a permission issue on listing transactions.
     * @path /users/{userId}/transactions
     * @allow (list) User '5HaBmUz0e0eHTgSEGL19OhZvjp83' can list transactions under their profile.
     * @principle Enforces document ownership for reads and restricts access to a user's own data.
     */
    match /users/{userId}/transactions/{transactionId} {
      // Read rules
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);

      // Write rules
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }
  }
}